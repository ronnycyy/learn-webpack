{
	"files": [
		{
			"path": "webpack/bin/webpack.js",
			"bookmarks": [
				{
					"line": 1,
					"column": 0,
					"label": "webpack入口文件"
				}
			]
		},
		{
			"path": "webpack-cli/bin/cli.js",
			"bookmarks": [
				{
					"line": 1,
					"column": 0,
					"label": "webpack-cli 入口"
				}
			]
		},
		{
			"path": "webpack-cli/bin/config/config-yargs.js",
			"bookmarks": [
				{
					"line": 1,
					"column": 4,
					"label": "查看所有 webpack --xx 这样能配置的命令"
				},
				{
					"line": 84,
					"column": 47,
					"label": "我们经常写的 webpack --config webpack.config.js"
				},
				{
					"line": 163,
					"column": 47,
					"label": "以后写 webpack.config.js，不知道配置的字段名，就在这里找，哈哈~"
				}
			]
		},
		{
			"path": "webpack/lib/webpack.js",
			"bookmarks": [
				{
					"line": 1,
					"column": 1,
					"label": "执行，返回 webpack 编译器"
				},
				{
					"line": 46,
					"column": 46,
					"label": "[webpack 流程篇] 准备阶段:  1. 设置一些 webpack 初始配置"
				},
				{
					"line": 52,
					"column": 89,
					"label": "[webpack 流程篇] 准备阶段:  2. 在 entry-option 和 run 事件之间会触发 beforeRun 事件，这里是订阅 beforeRun 事件"
				},
				{
					"line": 59,
					"column": 18,
					"label": "处理 plugins 数组"
				},
				{
					"line": 81,
					"column": 5,
					"label": "[webpack 流程篇] 准备阶段:  3. 触发 entry-option 事件"
				},
				{
					"line": 86,
					"column": 38,
					"label": "将所有的配置 options 参数转换成 webpack 内部插件"
				}
			]
		},
		{
			"path": "tapable/README.md",
			"bookmarks": [
				{
					"line": 2,
					"column": 0,
					"label": "Tapable 类似于 Node.js 的 EventEmitter 库，控制 hook 的发布与订阅，控制 webpack 插件系统。"
				}
			]
		},
		{
			"path": "webpack/lib/Compiler.js",
			"bookmarks": [
				{
					"line": 4,
					"column": 1,
					"label": ""
				},
				{
					"line": 312,
					"column": 40,
					"label": "[webpack 流程篇] 准备阶段: 5. 资源已经生成，开始构建"
				},
				{
					"line": 330,
					"column": 10,
					"label": "[webpack 流程篇] 模块构建和chunk生成: 1. 入口"
				},
				{
					"line": 351,
					"column": 91,
					"label": "[webpack 流程篇] 准备阶段: 4. Compiler 主逻辑: 发布 beforeRun 事件， NodeEnvironmentPlugin 订阅了，会去清理缓存"
				},
				{
					"line": 532,
					"column": 61,
					"label": "webpack 流程篇] 文件生成: 4. 到达 emit 阶段，通过注册的 emit 回调，将内容输出到磁盘里"
				}
			]
		},
		{
			"path": "webpack/lib/Compilation.js",
			"bookmarks": [
				{
					"line": 735,
					"column": 41,
					"label": "[webpack 流程篇] 模块构建和chunk生成: 2. 构建单个模块"
				},
				{
					"line": 1313,
					"column": 67,
					"label": "[webpack 流程篇] 文件生成: 1. 进行一系列的优化工作，比如 optimize、optimizeChunks 事件"
				}
			]
		},
		{
			"path": "webpack/lib/WebpackOptionsApply.js",
			"bookmarks": [
				{
					"line": 305,
					"column": 47,
					"label": "[webpack 流程篇] 准备阶段:  3. 触发 entry-option 事件"
				}
			]
		}
	]
}